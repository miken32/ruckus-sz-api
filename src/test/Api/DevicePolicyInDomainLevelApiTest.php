<?php
/**
 * DevicePolicyInDomainLevelApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  PofP\SmartzoneClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Virtual SmartZone - High Scale
 *
 * This reference guide describes the public APIs supported by the Virtual SmartZone - High Scale 6.1.1. Use the RESTful API commands described in this guide as an alternative way to manage the controller and its managed APs (in addition to the web and command line interfaces).
 *
 * The version of the OpenAPI document: v11_1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace PofP\SmartzoneClient\Test\Api;

use \PofP\SmartzoneClient\Configuration;
use \PofP\SmartzoneClient\ApiException;
use \PofP\SmartzoneClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DevicePolicyInDomainLevelApiTest Class Doc Comment
 *
 * @category Class
 * @package  PofP\SmartzoneClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DevicePolicyInDomainLevelApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addDevicePolicy
     *
     * Use this API command to create a Device Policy profile..
     *
     */
    public function testAddDevicePolicy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDevicePolicy
     *
     * Use this API command to delete a list of Device Policy profile..
     *
     */
    public function testDeleteDevicePolicy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDevicePolicyById
     *
     * Use this API command to delete a Device Policy profile..
     *
     */
    public function testDeleteDevicePolicyById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findDevicePolicy
     *
     * Use this API command to retrieve list of Device Policy profiles..
     *
     */
    public function testFindDevicePolicy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findDevicePolicyById
     *
     * Use this API command to retrieve a Device Policy profile..
     *
     */
    public function testFindDevicePolicyById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findDevicePolicyByQueryCriteria
     *
     * Query Device Policy Profile with specified filters..
     *
     */
    public function testFindDevicePolicyByQueryCriteria()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDevicePolicyById
     *
     * Use this API command to update a Device Policy profile..
     *
     */
    public function testUpdateDevicePolicyById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
