<?php
/**
 * ControlPlanesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  PofP\SmartzoneClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Virtual SmartZone - High Scale
 *
 * This reference guide describes the public APIs supported by the Virtual SmartZone - High Scale 6.1.1. Use the RESTful API commands described in this guide as an alternative way to manage the controller and its managed APs (in addition to the web and command line interfaces).
 *
 * The version of the OpenAPI document: v11_1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace PofP\SmartzoneClient\Test\Api;

use \PofP\SmartzoneClient\Configuration;
use \PofP\SmartzoneClient\ApiException;
use \PofP\SmartzoneClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ControlPlanesApiTest Class Doc Comment
 *
 * @category Class
 * @package  PofP\SmartzoneClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ControlPlanesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteControlPlanesStaticRoutesByBladeUUID
     *
     * Use this API command to delete the static route of control plane..
     *
     */
    public function testDeleteControlPlanesStaticRoutesByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteControlPlanesUserDefinedInterfaceByBladeUUID
     *
     * Use this API command to delete the user defined interface of control plane..
     *
     */
    public function testDeleteControlPlanesUserDefinedInterfaceByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findControlPlanes
     *
     * Use this API command to retrieve the list of control plane..
     *
     */
    public function testFindControlPlanes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findControlPlanesByBladeUUID
     *
     * Use this API command to retrieve control plane..
     *
     */
    public function testFindControlPlanesByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findControlPlanesInterfaces
     *
     * Use this API command to retrieve Control Plane Interface list..
     *
     */
    public function testFindControlPlanesInterfaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findControlPlanesStaticRoutesByBladeUUID
     *
     * Use this API command to retrieve static route of control plane..
     *
     */
    public function testFindControlPlanesStaticRoutesByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for findControlPlanesUserDefinedInterfaceByBladeUUID
     *
     * Use this API command to retrieve user defined interface of control plane..
     *
     */
    public function testFindControlPlanesUserDefinedInterfaceByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for partialUpdateControlPlanesByBladeUUID
     *
     * Use this API command to modify the configuration of control plane..
     *
     */
    public function testPartialUpdateControlPlanesByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for partialUpdateControlPlanesIpSupport
     *
     * Use this API command to modify ip support of control plane..
     *
     */
    public function testPartialUpdateControlPlanesIpSupport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for partialUpdateControlPlanesStaticRoutesByBladeUUID
     *
     * Use this API command to modify the static route of control plane..
     *
     */
    public function testPartialUpdateControlPlanesStaticRoutesByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for partialUpdateControlPlanesUserDefinedInterfaceByBladeUUID
     *
     * Use this API command to modify user defined interface of control plane..
     *
     */
    public function testPartialUpdateControlPlanesUserDefinedInterfaceByBladeUUID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
